<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.spzx.manager.mapper.CategoryBrandMapper">

    <resultMap id="categoryBrandMap" type="com.atguigu.spzx.model.entity.product.CategoryBrand" autoMapping="true">
    </resultMap>

    <resultMap id="brandMap" type="com.atguigu.spzx.model.entity.product.Brand" autoMapping="true"></resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        id,brand_id,category_id,create_time,update_time,is_deleted
    </sql>

    <!--//分页列表品牌及分类findByPage-->
    <select id="findByPage" resultMap="categoryBrandMap">
        select cb.*, c.name as categoryName, b.name as brandName, b.logo
        from category_brand cb
        inner join category c on c.id = cb.category_id
        inner join brand b on b.id = cb.brand_id
        <where>
            <if test="brandId != null and brandId != ''">
                and cb.brand_id = #{brandId}
            </if>
            <if test="categoryId != null and categoryId != ''">
                and cb.category_id = #{categoryId}
            </if>
            and cb.is_deleted = 0
        </where>
        order by cb.id desc
    </select>

    <!--//品牌和分类添加功能save-->
    <insert id="save">
        insert into category_brand (
            id,
            brand_id,
            category_id,
            create_time,
            update_time ,
            is_deleted
        ) values (
             #{id},
             #{brandId},
             #{categoryId},
             now(),
             now(),
             0
         )
    </insert>

    <!--//品牌和分类修改功能updateById-->
    <update id="updateById">
        update category_brand set
        <if test="brandId != null and brandId != ''">
            brand_id = #{brandId},
        </if>
        <if test="categoryId != null and categoryId != ''">
            category_id = #{categoryId},
        </if>
        update_time =  now()
        where
        id = #{id}
    </update>

    <!--//品牌和分类删除功能deleteById-->
    <update id="deleteById">
        update category_brand set
            update_time = now() ,
            is_deleted = 1
        where
            id = #{id}
    </update>

    <!--//根据分类id查询对应的品牌功能findBrandByCategoryId-->
    <select id="findBrandByCategoryId" resultMap="brandMap">
        select b.*
        from category_brand cb
        inner join  brand b on b.id = cb.brand_id
        where cb.category_id = #{categoryId} and cb.is_deleted = 0
        order by cb.id desc
    </select>
</mapper>